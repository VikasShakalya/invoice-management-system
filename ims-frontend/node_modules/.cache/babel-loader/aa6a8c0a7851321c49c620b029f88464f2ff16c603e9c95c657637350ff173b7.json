{"ast":null,"code":"import axios from './axiosInstance';\nexport const loginUser = async (username, password) => {\n  try {\n    const response = await axios.post('/token/', {\n      username,\n      password\n    });\n    if (response.data && response.data.access && response.data.refresh) {\n      localStorage.setItem('accessToken', response.data.access);\n      localStorage.setItem('refreshToken', response.data.refresh);\n      localStorage.setItem('username', username);\n      return response.data;\n    } else {\n      throw new Error('Invalid response from server');\n    }\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error('Login error:', {\n      status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n      data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n      message: error.message\n    });\n    throw error;\n  }\n};\nexport const logoutUser = () => {\n  localStorage.removeItem('accessToken');\n  localStorage.removeItem('refreshToken');\n  localStorage.removeItem('username');\n  window.location.href = '/login';\n};\nexport const refreshToken = async () => {\n  try {\n    const refreshToken = localStorage.getItem('refreshToken');\n    if (!refreshToken) {\n      throw new Error('No refresh token available');\n    }\n    const response = await axios.post('/token/refresh/', {\n      refresh: refreshToken\n    });\n    localStorage.setItem('accessToken', response.data.access);\n    return response.data;\n  } catch (error) {\n    console.error('Token refresh error:', error);\n    logoutUser();\n    throw error;\n  }\n};\nexport const getCurrentUser = async () => {\n  try {\n    const response = await axios.get('/users/me/');\n    return response.data;\n  } catch (error) {\n    console.error('Get current user error:', error);\n    throw error;\n  }\n};\nexport const isAuthenticated = () => {\n  return !!localStorage.getItem('accessToken');\n};","map":{"version":3,"names":["axios","loginUser","username","password","response","post","data","access","refresh","localStorage","setItem","Error","error","_error$response","_error$response2","console","status","message","logoutUser","removeItem","window","location","href","refreshToken","getItem","getCurrentUser","get","isAuthenticated"],"sources":["C:/Users/hp/Desktop/invoice system/ims-frontend/src/api/auth.js"],"sourcesContent":["import axios from './axiosInstance';\n\nexport const loginUser = async (username, password) => {\n  try {\n    const response = await axios.post('/token/', {\n      username,\n      password,\n    });\n    \n    if (response.data && response.data.access && response.data.refresh) {\n      localStorage.setItem('accessToken', response.data.access);\n      localStorage.setItem('refreshToken', response.data.refresh);\n      localStorage.setItem('username', username);\n      return response.data;\n    } else {\n      throw new Error('Invalid response from server');\n    }\n  } catch (error) {\n    console.error('Login error:', {\n      status: error.response?.status,\n      data: error.response?.data,\n      message: error.message\n    });\n    throw error;\n  }\n};\n\nexport const logoutUser = () => {\n  localStorage.removeItem('accessToken');\n  localStorage.removeItem('refreshToken');\n  localStorage.removeItem('username');\n  window.location.href = '/login';\n};\n\nexport const refreshToken = async () => {\n  try {\n    const refreshToken = localStorage.getItem('refreshToken');\n    if (!refreshToken) {\n      throw new Error('No refresh token available');\n    }\n    \n    const response = await axios.post('/token/refresh/', {\n      refresh: refreshToken,\n    });\n    \n    localStorage.setItem('accessToken', response.data.access);\n    return response.data;\n  } catch (error) {\n    console.error('Token refresh error:', error);\n    logoutUser();\n    throw error;\n  }\n};\n\nexport const getCurrentUser = async () => {\n  try {\n    const response = await axios.get('/users/me/');\n    return response.data;\n  } catch (error) {\n    console.error('Get current user error:', error);\n    throw error;\n  }\n};\n\nexport const isAuthenticated = () => {\n  return !!localStorage.getItem('accessToken');\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AAEnC,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACrD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,SAAS,EAAE;MAC3CH,QAAQ;MACRC;IACF,CAAC,CAAC;IAEF,IAAIC,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACC,MAAM,IAAIH,QAAQ,CAACE,IAAI,CAACE,OAAO,EAAE;MAClEC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEN,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC;MACzDE,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEN,QAAQ,CAACE,IAAI,CAACE,OAAO,CAAC;MAC3DC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAER,QAAQ,CAAC;MAC1C,OAAOE,QAAQ,CAACE,IAAI;IACtB,CAAC,MAAM;MACL,MAAM,IAAIK,KAAK,CAAC,8BAA8B,CAAC;IACjD;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,gBAAA;IACdC,OAAO,CAACH,KAAK,CAAC,cAAc,EAAE;MAC5BI,MAAM,GAAAH,eAAA,GAAED,KAAK,CAACR,QAAQ,cAAAS,eAAA,uBAAdA,eAAA,CAAgBG,MAAM;MAC9BV,IAAI,GAAAQ,gBAAA,GAAEF,KAAK,CAACR,QAAQ,cAAAU,gBAAA,uBAAdA,gBAAA,CAAgBR,IAAI;MAC1BW,OAAO,EAAEL,KAAK,CAACK;IACjB,CAAC,CAAC;IACF,MAAML,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMM,UAAU,GAAGA,CAAA,KAAM;EAC9BT,YAAY,CAACU,UAAU,CAAC,aAAa,CAAC;EACtCV,YAAY,CAACU,UAAU,CAAC,cAAc,CAAC;EACvCV,YAAY,CAACU,UAAU,CAAC,UAAU,CAAC;EACnCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;AACjC,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF,MAAMA,YAAY,GAAGd,YAAY,CAACe,OAAO,CAAC,cAAc,CAAC;IACzD,IAAI,CAACD,YAAY,EAAE;MACjB,MAAM,IAAIZ,KAAK,CAAC,4BAA4B,CAAC;IAC/C;IAEA,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,iBAAiB,EAAE;MACnDG,OAAO,EAAEe;IACX,CAAC,CAAC;IAEFd,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEN,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC;IACzD,OAAOH,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdG,OAAO,CAACH,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5CM,UAAU,CAAC,CAAC;IACZ,MAAMN,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMrB,QAAQ,GAAG,MAAMJ,KAAK,CAAC0B,GAAG,CAAC,YAAY,CAAC;IAC9C,OAAOtB,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdG,OAAO,CAACH,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMe,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAO,CAAC,CAAClB,YAAY,CAACe,OAAO,CAAC,aAAa,CAAC;AAC9C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
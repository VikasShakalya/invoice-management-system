{"ast":null,"code":"import axios from './axiosInstance';\nexport const getUsers = async () => {\n  try {\n    const response = await axios.get('/users/');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching users:', error);\n    throw error;\n  }\n};\nexport const getCurrentUser = async () => {\n  try {\n    const response = await axios.get('/users/me/');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching current user:', error);\n    throw error;\n  }\n};\nexport const createUser = async userData => {\n  try {\n    const response = await axios.post('/users/', userData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating user:', error);\n    throw error;\n  }\n};\nexport const updateUser = async (id, userData) => {\n  try {\n    const response = await axios.put(`/users/${id}/`, userData);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating user ${id}:`, error);\n    throw error;\n  }\n};\nexport const deleteUser = async id => {\n  try {\n    await axios.delete(`/users/${id}/`);\n    return true;\n  } catch (error) {\n    console.error(`Error deleting user ${id}:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","getUsers","response","get","data","error","console","getCurrentUser","createUser","userData","post","updateUser","id","put","deleteUser","delete"],"sources":["C:/Users/hp/Desktop/invoice system/ims-frontend/src/api/user.js"],"sourcesContent":["import axios from './axiosInstance';\n\nexport const getUsers = async () => {\n  try {\n    const response = await axios.get('/users/');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching users:', error);\n    throw error;\n  }\n};\n\nexport const getCurrentUser = async () => {\n  try {\n    const response = await axios.get('/users/me/');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching current user:', error);\n    throw error;\n  }\n};\n\nexport const createUser = async (userData) => {\n  try {\n    const response = await axios.post('/users/', userData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating user:', error);\n    throw error;\n  }\n};\n\nexport const updateUser = async (id, userData) => {\n  try {\n    const response = await axios.put(`/users/${id}/`, userData);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating user ${id}:`, error);\n    throw error;\n  }\n};\n\nexport const deleteUser = async (id) => {\n  try {\n    await axios.delete(`/users/${id}/`);\n    return true;\n  } catch (error) {\n    console.error(`Error deleting user ${id}:`, error);\n    throw error;\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AAEnC,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,SAAS,CAAC;IAC3C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,YAAY,CAAC;IAC9C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC5C,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMF,KAAK,CAACU,IAAI,CAAC,SAAS,EAAED,QAAQ,CAAC;IACtD,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMM,UAAU,GAAG,MAAAA,CAAOC,EAAE,EAAEH,QAAQ,KAAK;EAChD,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMF,KAAK,CAACa,GAAG,CAAC,UAAUD,EAAE,GAAG,EAAEH,QAAQ,CAAC;IAC3D,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuBO,EAAE,GAAG,EAAEP,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMS,UAAU,GAAG,MAAOF,EAAE,IAAK;EACtC,IAAI;IACF,MAAMZ,KAAK,CAACe,MAAM,CAAC,UAAUH,EAAE,GAAG,CAAC;IACnC,OAAO,IAAI;EACb,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuBO,EAAE,GAAG,EAAEP,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}